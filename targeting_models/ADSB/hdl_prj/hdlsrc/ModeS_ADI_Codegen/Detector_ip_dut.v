// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\ModeS_ADI_Codegen\Detector_ip_dut.v
// Created: 2017-07-24 12:13:03
// 
// Generated by MATLAB 9.2 and HDL Coder 3.10
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Detector_ip_dut
// Source Path: Detector_ip/Detector_ip_dut
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Detector_ip_dut
          (clk,
           reset,
           dut_enable,
           I_In,
           Q_In,
           ce_out,
           reset_1,
           bit_process,
           empty_reg,
           bit_clk,
           bits,
           crc,
           noise_floor,
           sync_corr,
           data,
           frame_valid);


  input   clk;
  input   reset;
  input   dut_enable;  // ufix1
  input   signed [15:0] I_In;  // sfix16_En15
  input   signed [15:0] Q_In;  // sfix16_En15
  output  ce_out;  // ufix1
  output  reset_1;  // ufix1
  output  bit_process;  // ufix1
  output  empty_reg;  // ufix1
  output  bit_clk;  // ufix1
  output  bits;  // ufix1
  output  crc;  // ufix1
  output  signed [15:0] noise_floor;  // sfix16_En16
  output  signed [15:0] sync_corr;  // sfix16_En11
  output  [15:0] data;  // ufix16
  output  [15:0] frame_valid;  // ufix16

  wire enb;
  wire ce_out_sig;  // ufix1
  wire reset_1_sig;  // ufix1
  wire bit_process_sig;  // ufix1
  wire empty_reg_sig;  // ufix1
  wire bit_clk_sig;  // ufix1
  wire bits_sig;  // ufix1
  wire crc_sig;  // ufix1
  wire signed [15:0] noise_floor_sig;  // sfix16_En16
  wire signed [15:0] sync_corr_sig;  // sfix16_En11
  wire [15:0] data_sig;  // ufix16
  wire [15:0] frame_valid_sig;  // ufix16


  assign enb = dut_enable;

  Detector_ip_src_Detector u_Detector_ip_src_Detector (.clk(clk),
                                                       .clk_enable(enb),
                                                       .reset(reset),
                                                       .I_In(I_In),  // sfix16_En15
                                                       .Q_In(Q_In),  // sfix16_En15
                                                       .ce_out(ce_out_sig),  // ufix1
                                                       .reset_1(reset_1_sig),  // ufix1
                                                       .bit_process(bit_process_sig),  // ufix1
                                                       .empty_reg(empty_reg_sig),  // ufix1
                                                       .bit_clk(bit_clk_sig),  // ufix1
                                                       .bits(bits_sig),  // ufix1
                                                       .crc(crc_sig),  // ufix1
                                                       .noise_floor(noise_floor_sig),  // sfix16_En16
                                                       .sync_corr(sync_corr_sig),  // sfix16_En11
                                                       .data(data_sig),  // ufix16
                                                       .frame_valid(frame_valid_sig)  // ufix16
                                                       );

  assign ce_out = ce_out_sig;

  assign reset_1 = reset_1_sig;

  assign bit_process = bit_process_sig;

  assign empty_reg = empty_reg_sig;

  assign bit_clk = bit_clk_sig;

  assign bits = bits_sig;

  assign crc = crc_sig;

  assign noise_floor = noise_floor_sig;

  assign sync_corr = sync_corr_sig;

  assign data = data_sig;

  assign frame_valid = frame_valid_sig;

endmodule  // Detector_ip_dut

